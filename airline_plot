from unittest import result
import pymongo
from bson.regex import Regex
import pandas as pd
from dateutil.parser import parse
import datetime


import index #import index.py file
tweet = index.tweets #import tweets variable from index.py file and assign to tweet
import matplotlib.pyplot as plt

screen_names = ["KLM", "AirFrance", "British_Airways", "AmericanAir", "Lufthansa", "AirBerlin", "AirBerlin assist", 
"easyJet"," RyanAir","SingaporeAir", "Qantas", "EtihadAirways", "VirginAtlantic"]

#1 removing empty time strings
#2 changing time to timestamp
#3 creating aggregation - groupby time, airline, and count()
#4 plotting

#for twt in tweet.find({}):
#    tweet.delete_one({"created_at": {"$exists": False}})


#print(tweet.count_documents({"created_at": {"$exists": False}}))
# def remove_wrong_time(tweet):
#     for twt in tweet:
#         tweet.delete_one({"created_at": })


#date = datetime.datetime.strptime("30 Nov 00", '%a %b %d %X %z %Y')



all_tweets = tweet.find({})

for twt in all_tweets:
    tweet.update_one({"_id" : twt["_id"]},{ "$set": { 'created_at': datetime.datetime.strptime(twt["created_at"], '%a %b %d %X %z %Y') } })
print(all_tweets)
    

# t = tweet.find_one({})
# print(t['created_at'])

# new_json = tweet.aggregate([
#     {"$group" : {"_id":{"created_at"}, "count": {"$sum":1}}}
# ])
for twt in all_tweets:
    tweet.update_one({"_id" : twt["_id"]}, {"$unset" : {"retweeted_status.user.id_str" : ""}})
def retweeted_status_user_object_cleaning():

    import index #import other file
    tweet = index.tweets #get tweets variable from index.py

    all_tweets = tweet.find({}) # Find all tweets

    for tweet_object in all_tweets: # Deletes all unnecessary information from the retweeted_status.user object
        tweet.update_one({"_id" : tweet_object["_id"]}, {"$unset" : {"retweeted_status.user.id_str" : "", "retweeted_status.user.name" : "", 
        "retweeted_status.user.url" : "", "retweeted_status.user.translator_type" : "", "retweeted_status.user.utc_offset" : "", "retweeted_status.user.time_zone" : "", 
        "retweeted_status.user.geo_enabled": "", "retweeted_status.user.lang" : "", "retweeted_status.user.contributors_enabled" : "", "retweeted_status.user.is_translator" : "",
        "retweeted_status.user.profile_background_color" : "", "retweeted_status.user.profile_background_image_url" : "", "retweeted_status.user.profile_background_image_url_https" : "",
        "retweeted_status.user.profile_background_tile" : "", "retweeted_status.user.profile_link_color " : "", "retweeted_status.user.profile_sidebar_border_color " : "",
        "retweeted_status.user.profile_sidebar_fill_color" : "", "retweeted_status.user.profile_text_color" : "", "retweeted_status.user.profile_use_background_image" : "",
        "retweeted_status.user.profile_image_url" : "", "retweeted_status.user.profile_image_url_https" : "", "retweeted_status.user.profile_banner_url" : "", "retweeted_status.user.default_profile" : "",
        "retweeted_status.user.default_profile_image" : "", "retweeted_status.user.following" : "", "retweeted_status.user.follow_request_sent" : "", "retweeted_status.user.notifications" : "", 
        "retweeted_status.user.profile_link_color" : "", "retweeted_status.user.profile_sidebar_border_color" : ""}})
print(retweeted_status_user_object_cleaning(tweet))